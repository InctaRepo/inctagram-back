name: GitHub Actions Vercel Preview Deployment
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    DATABASE_URL: ${{ secrets.DATABASE_URL }}
    SHADOW_DB_URL: ${{ secrets.SHADOW_DB_URL }}
    SMTP_USER: ${{ secrets.SMTP_USER }}
    SMTP_PASS: ${{ secrets.SMTP_PASS }}
    SMTP_HOST: ${{ secrets.SMTP_HOST }}
    EMAIL1: ${{ secrets.EMAIL1 }}
    EMAIL2: ${{ secrets.EMAIL2 }}
    SALT_HASH: ${{ secrets.SALT_HASH }}
    SECRET_ACCESS_TOKEN: ${{secrets.SECRET_ACCESS_TOKEN}}
    SECRET_REFRESH_TOKEN: ${{secrets.SECRET_REFRESH_TOKEN}}
    TIME_EXPIRING_ACCESS_TOKEN: ${{secrets.TIME_EXPIRING_ACCESS_TOKEN}}
    TIME_EXPIRING_REFRESH_TOKEN: ${{secrets.TIME_EXPIRING_REFRESH_TOKEN}}

on:
  push:
    branches:
      - dev
jobs:
  Tests:
    name: Tests # название конктретной работы в pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout  # клонируем репозиторый
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install  # устанавливаем зависимости

      - name: Prisma generate schemas
        run: yarn prisma generate --schema=prisma/schema.prisma

      - name: Test
        run: yarn test # запускаем скрипт тестами

      - name: Test e2e
        run: yarn test:e2e

  Deploy-Preview:
    runs-on: ubuntu-latest
    needs: Tests
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: yarn global add vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}